spring:
  application:
    name: spring-cloud-gateway
  config:
    import: optional:configserver:http://localhost:8888
  cloud:
    config:
      name: ecommerce
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Global Filter
            preLogger: true
            postLogger: true
      routes:
        # - id: user-service-1
        #   uri: lb://USER-SERVICE-1
        #   predicates:
        #     - Path=/user/**
        #   filters:
        #     # - AddRequestHeader=gateway-request, user-service-request-yml
        #     # - AddResponseHeader=gateway-response, user-service-response-yml
        #     - CustomFilter
        #     - name: LoggingFilter
        #       args:
        #         baseMessage: Logging Filter
        #         preLogger: true
        #         postLogger: true
        - id: user-service-1
          uri: lb://USER-SERVICE-1
          predicates:
            - Path=/user-service/login # 사용자가 Gateway로 호출하는 URL
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment} # Gateway 통과 이후 전달하게 되는 URL
        - id: user-service-1
          uri: lb://USER-SERVICE-1
          predicates:
            - Path=/user-service/user
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service-1
          uri: lb://USER-SERVICE-1
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: user-service-1
          uri: lb://USER-SERVICE-1
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: catalog-service-1
          uri: lb://CATALOG-SERVICE-1
          predicates:
            - Path=/catalog-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/catalog-service/(?<segment>.*), /$\{segment}
        - id: order-service-1
          uri: lb://ORDER-SERVICE-1
          predicates:
            - Path=/order-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka
# jwt:
#   secret-key: asdf

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh, info, metrics, prometheus
